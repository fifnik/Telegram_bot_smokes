import sqlite3
import random
import time

from aiogram import F, Router
from aiogram.types import CallbackQuery

from ..keyboards.inline import main_menu_keyboard, boxes_menu_kb
from ..services.smokes import create_smoke
from ..services.users import (
    get_balance,
    get_last_free_box,
    set_last_free_box,
    update_balance,
)

router = Router()


# === –ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ –±–æ–∫—Å–æ–≤ ===
@router.callback_query(F.data == "boxes")
async def cb_boxes(callback: CallbackQuery):
    await callback.answer()
    await callback.message.edit_text(
        "üéÅ –í—ã–±–µ—Ä–∏—Ç–µ –ª—É—Ç–±–æ–∫—Å:",
        reply_markup=boxes_menu_kb()
    )


# === –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–∫—É–ø–∫–∏ –±–æ–∫—Å–∞ ===
async def buy_box_generic(callback: CallbackQuery, price: int, rarity_table: list, DB_PATH=None):
    user_id = callback.from_user.id
    balance = get_balance(user_id)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –±–∞–ª–∞–Ω—Å
    if balance < price:
        await callback.answer("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!", show_alert=True)
        return

    # –°–ø–∏—Å—ã–≤–∞–µ–º –¥–µ–Ω—å–≥–∏, –µ—Å–ª–∏ –±–æ–∫—Å –ø–ª–∞—Ç–Ω—ã–π
    if price > 0:
        update_balance(user_id, -price)

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–µ–¥–∫–æ—Å—Ç—å –ø–æ —à–∞–Ω—Å–∞–º
    roll = random.randint(1, 100)
    acc = 0
    rarity = "–æ–±—ã—á–Ω–∞—è"
    for r, chance in rarity_table:
        acc += chance
        if roll <= acc:
            rarity = r
            break

    # –°–æ–∑–¥–∞—ë–º —Å–∏–≥–∞—Ä—É
    smoke_id = create_smoke(user_id, rarity=rarity)

    # –î–æ—Å—Ç–∞—ë–º –∏–Ω—Ñ—É –∏–∑ –ë–î
    conn = sqlite3.connect(DB_PATH)
    cur = conn.cursor()
    cur.execute("SELECT name, description FROM smokes WHERE id=?", (smoke_id,))
    row = cur.fetchone()
    conn.close()

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞–≥—Ä–∞–¥–µ
    if row:
        await callback.message.edit_text(
            f"üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ —Å–∏–≥–∞—Ä—É:\n\n"
            f"üö¨ {row[0]}\n"
            f"üìú {row[1]}\n\n"
            f"–†–µ–¥–∫–æ—Å—Ç—å: {rarity}",
            reply_markup=main_menu_keyboard()
        )
    else:
        await callback.message.edit_text(
            "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∏–≥–∞—Ä—ã.",
            reply_markup=main_menu_keyboard()
        )


# === –õ—É—Ç–±–æ–∫—Å—ã ===

@router.callback_query(F.data == "box_free")
async def free_box(callback: CallbackQuery):
    """–ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –±–æ–∫—Å (—Ä–∞–∑ –≤ —Å—É—Ç–∫–∏)"""
    user_id = callback.from_user.id

    last_time = get_last_free_box(user_id)
    if last_time and time.time() - last_time < 86400:  # 24 —á–∞—Å–∞
        await callback.answer("‚è≥ –ë–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ª—É—Ç–±–æ–∫—Å –¥–æ—Å—Ç—É–ø–µ–Ω —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏!", show_alert=True)
        return

    set_last_free_box(user_id, time.time())
    await buy_box_generic(callback, price=0, rarity_table=[
        ("üò∂‚Äçüå´Ô∏è –û–±—ã—á–Ω–∞—è", 60),
        ("üò® –†–µ–¥–∫–∞—è", 25),
        ("üò± –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", 9),
        ("ü§© –ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", 3),
        ("ü§Ø –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è", 3)
    ])


@router.callback_query(F.data == "buy_box_common")
async def paid_box(callback: CallbackQuery):
    """–û–±—ã—á–Ω—ã–π –ø–ª–∞—Ç–Ω—ã–π –±–æ–∫—Å (500üí∞)"""
    await buy_box_generic(callback, price=50, rarity_table=[
        ("üò∂‚Äçüå´Ô∏è –û–±—ã—á–Ω–∞—è", 60),
        ("üò® –†–µ–¥–∫–∞—è", 25),
        ("üò± –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", 9),
        ("ü§© –ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", 3),
        ("ü§Ø –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è", 2),
        ("üåø –°–µ–∫—Ä–µ—Ç–Ω–∞—è", 1),
    ])


@router.callback_query(F.data == "buy_box_premium")
async def premium_box(callback: CallbackQuery):
    """–ü—Ä–µ–º–∏—É–º –±–æ–∫—Å (2000üí∞)"""
    await buy_box_generic(callback, price=100, rarity_table=[
        ("üò∂‚Äçüå´Ô∏è –û–±—ã—á–Ω–∞—è", 58),
        ("üò® –†–µ–¥–∫–∞—è", 25),
        ("üò± –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", 9),
        ("ü§© –ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", 3),
        ("ü§Ø –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è", 3),
        ("üåø –°–µ–∫—Ä–µ—Ç–Ω–∞—è", 2)
    ])


@router.callback_query(F.data == "buy_box_elite")
async def vip_box(callback: CallbackQuery):
    """VIP –±–æ–∫—Å (5000üí∞)"""
    await buy_box_generic(callback, price=200, rarity_table=[
        ("üò∂‚Äçüå´Ô∏è –û–±—ã—á–Ω–∞—è", 55),
        ("üò® –†–µ–¥–∫–∞—è", 25),
        ("üò± –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", 9),
        ("ü§© –ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", 3),
        ("ü§Ø –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è", 5),
        ("üåø –°–µ–∫—Ä–µ—Ç–Ω–∞—è", 3)
    ])

@router.callback_query(F.data == "buy_box_event")
async def event_box(callback: CallbackQuery):
    """VIP –±–æ–∫—Å (5000üí∞)"""
    await buy_box_generic(callback, price=500, rarity_table=[
        ("üò∂‚Äçüå´Ô∏è –û–±—ã—á–Ω–∞—è", 53),
        ("üò® –†–µ–¥–∫–∞—è", 25),
        ("üò± –õ–µ–≥–µ–Ω–¥–∞—Ä–Ω–∞—è", 9),
        ("ü§© –ú–∏—Ñ–∏—á–µ—Å–∫–∞—è", 3),
        ("ü§Ø –ò–Ω—Ç–µ—Ä–µ—Å–Ω–∞—è", 5),
        ("üåø –°–µ–∫—Ä–µ—Ç–Ω–∞—è", 3),
        ('üîû –ì–∞–Ω–¥–∂—É–±–∞—Å', 2)
    ])
